<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  
 <!-- 5번째 -->
<mapper namespace="student">
	<!-- 값전달시 #{getter에서 get을 제외하고, 소문자로 시작하는 이름} OGNL방식 -->
	<insert id="insertStudent" parameterType="student">
		insert into
			student(no, name, tel)
		values(
			seq_student_no.nextval,
			#{name},
			#{tel}
		)
	</insert>
	
	
	<!-- insert태그의 parameterType는 선택사항이다 안써도됨-->
	<insert id="insertStudentMap" parameterType="map">
		insert into
			student(no, name, tel)
		values(
			seq_student_no.nextval,
			#{name},
			#{tel}
		)
	</insert>
	
	
	<!-- select태그의 resultType/resultMap은 필수속성이다. 둘중하나는 반드시 작성해주어야한다.-->
	<select id="selectStudentCount" resultType="_int">
		select 
			count(*)
		from
			student
	</select>
	
	
	<!-- resultset을 mybatis가 자동으로 vo매핑 
		 1. 동일한 이름의 setter를 통해 값대입
		 2. 자동형변환 처리
		 	varchar2, char - > String
		 	number - > int dounble로 처리
		 	date -> java.util.date 
		 	
		 필드명 불일치시
		 1. query alias지정 - 대소문자 구분위해 "" 필수
		 reg_date "regDate"...
		 
		 
		 2. resultMap - db컬럼과 vo필드(properties)
		 
		 
		 3. mybatis-config.xml의 setting태그 mapUnderscoreToCamelCase true 설정
		 
		 
	-->
	
	
	<!-- 1번쨰+3번째방법 -->
<!-- 	<select id="selectOneStudent" resultType="student">
		select 
			no,
			name,
			tel,
			reg_date "regDate"
		from
			student
		where
			no = #{no}
	</select> -->
	
	
	<!--3번째  mybatis setting만져줌-->
	
	<select id="selectOneStudent" resultType="student">
		select *
		from
			student
		where
			no = #{no}
	</select>
	
	<!-- 2번쨰방법 -->
<!-- 	<select id="selectOneStudent" resultMap="studentMap">
		select *
		from
			student
		where
			no = #{no}
	</select> -->
	
	
	
	<!-- 위에 작성한게 이쪽으로 온다 id값때문에
	
	
		db컬럼과 vo필드(property)를 연결
		1. 이름 불일치 해결
		2. 형변환처리를 임의로 지정
		
		- column과 property과 동일하다면, 해당 자식태그는 생략가능
		- resultMap은 재사용이 가능하다.
		
	 -->
	
	
	<resultMap type="student" id="studentVoMap">
		<!--pk컬럼용  -->
		<id column="no" property="no"/>
		
		<!-- 나머지 컬럼용 -->
		<result column="name" property="name"/>
		<result column="tel" property="tel"/>
		<!-- 여기가 좀 다름 -->
		<result column="reg_date" property="regDate"/>
	
	</resultMap>
	
	
	
	<!-- 1번째 방법 -->
<!-- 	<select id="selectOneStudentMap" resultType="map">
	
		select
			no "no",
			name "name",
			tel "tel",
			reg_date "regDate"
			
		from
			student
		where
			no=#{no}
	
	</select> -->
	
	<!--2번째 방법  -->
	
	<select id="selectOneStudentMap" resultMap="studentMap">
	
		select 
			*
		from
			student
		where
			no=#{no}
	
	</select>
	<resultMap type="map" id="studentMap">
		<id column="no" property="no"/>
		<result column="name" property="name"/>
		<result column="tel" property="tel"/>
		<result column="reg_date" property="regDate"/>
	</resultMap>
	
	
	
	<update id="updateStudent" parameterType="student">
		update 
			student
		set 
			name = #{name},
			tel = #{tel}
			
		where 
			no=#{no}
	</update>
	
	<delete id="student.deleteStudent" parameterType="student">
		delete 
			student
		where 
			no=#{no}
	
	</delete>
		
	
	
</mapper>